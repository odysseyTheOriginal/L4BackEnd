Fundamentals of databases
& Database design
IN 1400- Level 1 Semester 2
Lecture 3
Thilina Ranbaduge
tranbaduge@uom.lk

What we discuss Today………







An Example Database Application
Entity Types, Entity Sets, Attributes, and Keys
Relationships, Relationship Types, Roles, and Structural Constraints
Weak Entity Types
Refining the ER Design for the COMPANY Database
ER Diagrams, Naming Conventions, and Design Issues

Example COMPANY Database
Requirements of the Company (oversimplified for illustrative purposes)


The company is organized into departments. Each department has a unique name, a unique
number, and a particular employee who manages the department. We keep track of the start
date when that employee began managing the department. A department may have several
locations.



A department controls a number of projects, each of which has a unique name, a unique
number, and a single location.



We store each employee’s name, social security number (Note 1), address, salary, sex, and
birth date. An employee is assigned to one department but may work on several projects,
which are not necessarily controlled by the same department. We keep track of the number of
hours per week that an employee works on each project. We also keep track of the direct
supervisor of each employee.



We want to keep track of the dependents of each employee for insurance purposes. We keep
each dependent’s first name, sex, birth date, and relationship to the employee.

E-R Model Concepts
Entities
Entities are specific objects or things in the mini-world that are represented in the
database
Ex :- a company, a job, or a university course

.

Attributes
Entities are specific objects or things in the mini-world that are represented in the
database
Ex :- an employee entity may be described by the employee’s name, age, address,
salary, and job

Entity & attributes

What Should an Entity Be?


SHOULD BE:
 An object that will have many instances in the

database
 An object that will be composed of multiple
attributes
 An object that we are trying to model


SHOULD NOT BE:
 A user of the database system
 An output of the database system (e.g., a

report)

Types of Attributes


Simple
Each entity has a single atomic value for the attribute.
example:- ID Number, Sex





Composite


The attribute may be composed of several components.

example,
Address (Apt#, House#, Street, City, State, ZipCode, Country)
Name (FirstName, MiddleName, LastName). Composition may form a
hierarchy where some components are themselves composite.

Types of Attributes
Multi

Valued

An entity may have multiple values for that attribute
Example :Color of a CAR
Previous Degrees of a STUDENT.


Stored Versus Derived Attributes
In

some cases two (or more) attribute values
are related

Example :the value of Age can be determined from the current (today’s) date and the value
of that person’s BirthDate. The Age attribute is hence called a derived attribute
and is said to be derivable from the BirthDate attribute, which is called a stored
attribute.

Null Values
In

some cases a particular entity may not have
an applicable value for an attribute
Example :the Apartment Number attribute of an address applies only to addresses that are
in apartment buildings and not to other types of residences, such as single-family
homes.

Complex Attributes


In general, composite and multi-valued
attributes may be nested arbitrarily to any
number of levels although this is rare.

example:-Previous Degrees of a STUDENT is a composite multi-valued attribute
denoted by {PreviousDegrees (College, Year, Degree, Field)}.

Entity Types and Key Attributes
 Entities with the

same basic attributes are grouped or typed into an
entity type. For example, the EMPLOYEE entity type or the PROJECT
entity type.
 An attribute of an entity type for which each entity must have a
unique value is called a key attribute of the entity type. For
example, SSN of EMPLOYEE.
 A key attribute may be composite. For example, Vehicle
TagNumber is a key of the CAR entity type with components
(Number, State).
 An entity type may have more than one key. For example, the CAR
entity type may have two keys:
– VehicleIdentificationNumber (popularly called VIN) and
– VehicleTagNumber (Number, State), also known as license_plate
number.

ENTITY SET corresponding to the ENTITY TYPE CAR
CAR
Registration(RegistrationNumber, State), VehicleID, Make,
Model, Year, (Color)

car1
((ABC 123, TEXAS), TK629, Ford Mustang, convertible, 1999, (red, black))
car2
((ABC 123, NEW YORK), WP9872, Nissan 300ZX, 2-door, 2002, (blue))
car3
((VSY 720, TEXAS), TD729, Buick LeSabre, 4-door, 2003, (white, blue))

.
.
.

SUMMARY OF ER-DIAGRAM NOTATION FOR ER SCHEMAS

ER DIAGRAM – Entity Types are:
EMPLOYEE, DEPARTMENT, PROJECT, DEPENDENT

Relationships and Relationship Types
A

relationship relates two or more distinct entities with a
specific meaning.

For example, EMPLOYEE John Smith works on the Product X PROJECT or
EMPLOYEE Franklin Wong manages the Research DEPARTMENT.
 Relationships

of the same type are grouped or typed into a
relationship type.
For example, the WORKS_ON relationship type in which EMPLOYEEs and
PROJECTs participate, or the MANAGES relationship type in which
EMPLOYEEs and DEPARTMENTs participate.

 The

degree of a relationship type is the number of
participating entity types.

Relationships of Higher Degree


Relationship types of degree 2 are called binary



Relationship types of degree 3 are called ternary and of
degree n are called n-ary



In general, an n-ary relationship is not equivalent to n
binary relationships

We can

also have a recursive relationship type.
Both participations are same entity type in different
roles.

Recursive Relationship Type is: SUPERVISION

Relationships and Relationship Types
More than

one relationship type can exist with the
same participating entity types.

For example, MANAGES and WORKS_FOR are distinct
relationships between EMPLOYEE and DEPARTMENT, but
with different meanings and different relationship instances.

Constraints on Relationships
Constraints

on Relationship Types

Also known as ratio constraints
 Maximum Cardinality

One-to-one (1:1)
One-to-many (1:N) or Many-to-one (N:1)
Many-to-many
Minimum

Cardinality

Also called participation constraint or existence dependency

constraints
zero (optional participation, not existence-dependent)
one or more (mandatory, existence-dependent)

Many-to-one (N:1) RELATIONSHIP

Many-to-many (M:N) RELATIONSHIP

Weak Entity Types
An entity

that does not have a key attribute
Entities belonging to a weak entity type are
identified by being related to specific entities from
another entity type in combination with some of
their attribute values.
Entities are identified by the combination of:
 A partial key of the weak entity type

 The particular entity they are related to in the

identifying entity type

Weak Entity Type is: DEPENDENT
Identifying Relationship is: DEPENDENTS_OF

Associative Entities





An entity –has attributes
A relationship –links entities together
When should a relationship with attributes instead be an
associative entity?
 All relationships for the associative entity should be many
 The associative entity could have meaning independent of
the other entities
 The associative entity preferably has a unique identifier, and
should also have other attributes
 The associative entity may participate in other relationships
other than the entities of the associated relationship
 Ternary relationships should be converted to associative
entities

Structural Constraints – one way to
express semantics of relationships
Structural constraints on relationships:


Cardinality ratio (of a binary relationship): 1:1, 1:N, N:1, or M:N




Participation constraint (on each participating entity type): total
(called existence dependency) or partial.




SHOWN BY PLACING APPROPRIATE NUMBER ON THE LINK.

SHOWN BY DOUBLE LINING THE LINK

NOTE: These are easy to specify for Binary Relationship Types.

Alternative (min, max) notation for relationship structural
constraints:
Specified on each participation of an entity type E in a relationship type R
l Specifies that each entity e in E participates in at least min and at most max
relationship instances in R
l Default(no constraint): min=0, max=n
l Must have minmax, min0, max 1
l Derived from the knowledge of mini-world constraints
Examples:
l A department has exactly one manager and an employee can manage at
most one department.
 Specify (0,1) for participation of EMPLOYEE in MANAGES
 Specify (1,1) for participation of DEPARTMENT in MANAGES
l An employee can work for exactly one department but a department can
have any number of employees.
 Specify (1,1) for participation of EMPLOYEE in WORKS_FOR
 Specify (0,n) for participation of DEPARTMENT in WORKS_FOR
l

Min, Max notation for relationship

PROBLEM with ER notation
The Entity Relationship model in its original

form did not support
SPECIALIZATION / GENERALIZATION
abstraction.

A Simple Example
STUDENTs attend COURSEs that consist of
many SUBJECTs.
 A single SUBJECT (i.e. English) can be studied
in many different COURSEs.
 Each STUDENT may only attend one COURSE.


ER Diagram Exercise


Draw a ERD about Bank data



Assumptions
 A Bank has many branches
 A customer can have many accounts in a branch
 A branch is holding many accounts
 A branch offering loans
 Customer can get many loans from a branch

ER DIAGRAM FOR A BANK DATABASE

ER Diagram Exercise


Draw a ERD about movie data



Let’s only consider the following entities and their
attributes
 Perfomers (Actors/Actresses): PerformerID, FirstName,

LastName, Gender
 Movies: MovieID, Title, Maker, Year
 MovieMakers (companies): MakerID, Name


Assumptions
 A movie one or more actors/actresses
 An actor/actress can be in multiple movies
 A movie is made by only one company

Reference
Chapter

3- Fundamentals of Database Systems
(4th Edition) By Remez Elmasri & Shamkant B.
Navathe

Questions ???

36

